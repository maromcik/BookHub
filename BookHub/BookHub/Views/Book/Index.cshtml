@using Microsoft.AspNetCore.Identity
@using BookHub.Models
@inject SignInManager<User> SignInManager
@model BusinessLayer.Models.BookView
@{
    ViewData["Title"] = "Books";
}

<h1>Books</h1>
<form asp-action="Search" asp-controller="Book" method="get">
    <input type="text" name="query" placeholder="Search..." />
    <button type="submit">Search</button>
</form>
    <p>
    </p>
@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Create Book", "Create", new { }, new { @class = "btn btn-sm btn-success" })
    </p>
}

<table class="table">
    <thead>
    <tr>
    
    <th>Name</th>
    <th>Actions</th>

    </thead>
    <tbody>
    @foreach (var item in Model.Books)
    {
        <tr>
            <td>@Html.DisplayFor(i => item.Name)</td>
            <td>
                @await Html.PartialAsync("TableButtons", new TableButton { Id = item.Id, ControllerName = "Book" })
            </td>
        </tr>
    }
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-4">
        @foreach (var item in Model.Books)
        {
            <tr>
                <td>@Html.DisplayFor(i => item.Name)</td>
                <td>
                    <div class="btn-group" role="group" aria-label="Book Actions">
                        <div>@Html.ActionLink("Detail", "Detail", new { id = item.Id }, new { @class = "btn btn-sm btn-primary" })</div>
                        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                        {
                            <div style="margin-left: 10px">@Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-warning" })</div>
                            <div style="margin-left: 10px">@Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-sm btn-danger" })
                            </div>
                        }
                    </div>
                </td>
            </tr>
        } 
    </div>
    </tbody>
</table>

Page @(Model.TotalPages < Model.CurrentPage ? 0 : Model.CurrentPage) of @Model.TotalPages

<div class="pagination flex justify-center items-center my-4">
    @if (Model.CurrentPage > 1)
    {
        <a asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)"
           class="btn btn-sm btn-primary">
            &lt;
        </a>
    }
    @for (var i = 1; i <= Model.TotalPages; i++)
    {
        <a asp-action="Index" asp-route-page="@i"
           class="btn btn-sm btn-primary">
            @i
        </a>
    }
    @if (Model.CurrentPage < Model.TotalPages)
    {
        <a asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)"
           class="btn btn-sm btn-primary">
            &gt;
        </a>
    }
</div>