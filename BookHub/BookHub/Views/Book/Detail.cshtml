@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using BookHub.Models
@model BusinessLayer.Models.BookDetail
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

<style>
    .modal {
        z-index: 1050;
    }
</style>

@{
    ViewData["Title"] = "Detail";
}

<div class="col-12">
    <div class="row">
        <div class="col-auto">
            <h2>@Model.Name</h2>
        </div>
        <div class="col-auto">
            @await Html.PartialAsync("TableButtons", new TableButton { Id = Model.Id, ControllerName = "Book", ShowDetail = false })
        </div>

    </div>
</div>

<div class="col-6">

    <p>
        <strong>Publisher:</strong> @Html.ActionLink(Model.Publisher.Name, "Detail","Publisher", new { id = Model.Publisher.Id }, new { @class = "detail-link-underline"})
    </p>
    <p> <strong>Primary Genre:</strong> @Html.ActionLink(Model.PrimaryGenre.Name, "Detail","Genre", new { id = Model.PrimaryGenre.Id }, new { @class = "detail-link-underline"})
    </p>

    <p>
        <strong>Genres:</strong>
        @if (Model.Genres.Any())
        {
            foreach (var genre in Model.Genres)
            {
                @Html.ActionLink(genre.Name, "Detail","Genre", new { id = genre.Id }, new { @class = "detail-link-underline"})

                @if (!genre.Equals(Model.Genres.Last()))
                {
                    <span>,</span>
                }
            }
        }
    </p>
    <p>
        <strong>Authors:</strong>
        @if (Model.Authors.Any())
        {
            foreach (var author in Model.Authors)
            {
                {
                    @Html.ActionLink(author.Name, "Detail","Author", new { id = author.Id }, new { @class = "detail-link-underline"})

                    @if (!author.Equals(Model.Authors.Last()))
                    {
                        <span>,</span>
                    }
                }
            }
        }
    </p>
    <p><strong>Stock: </strong>@Model.StockInStorage</p>
    <p id="ratingContainer"><strong>Overall Rating:</strong> @Model.OverallRating %</p>
    <p><strong>Price: </strong>@Model.Price â‚¬</p>


    <div class="btn-group" role="group" aria-label="Book Actions">
        @if (Model.StockInStorage > 0)
        {
            <div style="margin-right: 7px">@Html.ActionLink("Buy", "AppendItem", "Order", new { bookId = Model.Id }, new { @class = "btn" })</div>
        }
        else
        {
            <span style="margin-right: 7px" class="badge btn-danger">Currently unavailable</span>
        }
        <div>
            @if (User.Identity.IsAuthenticated)
            {
                <form method="post" action="@Url.Action("AddToWishlist", "Book", new { id = Model.Id })">
                    <button type="submit" class="btn">Add to Wishlist</button>
                </form>
            }
            @if (TempData.ContainsKey("WishlistMessage"))
            {
                <script>
                    alert('@TempData["WishlistMessage"]');
                </script>
            }
        </div>
    </div>

    <h3>
        <button id="showReviewsBtn" class="btn">
            Show Ratings
        </button>
        @if (SignInManager.IsSignedIn(User))
        {
            <button id="addRatingBtn" class="btn">
                Add Rating
            </button>
        }
    </h3>

    <div id="reviewsContainer">
    </div>
</div>

<div class="modal fade" id="wishlistModal" tabindex="-1" role="dialog" aria-labelledby="wishlistModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="wishlistModalLabel">Wishlist Notification</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (TempData.ContainsKey("WishlistMessage"))
                {
                    <p>@TempData["WishlistMessage"]</p>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addRatingModal" tabindex="-1" role="dialog" aria-labelledby="addRatingModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addRatingModalLabel">Add Rating</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addRatingForm">
                    <label for="ratingValue">Rating Value:</label>
                    <input type="number" id="ratingValue" name="ratingValue" min="1" max="100" required>

                    <div class="form-group">
                        <label for="comment">Comment:</label>
                        <input type="text" id="comment" name="comment" class="form-control" placeholder="Optional comment">
                    </div>
                    <button type="submit" class="btn">Submit Rating</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        $(document).ready(function () {
                $('#wishlistModal').on('hidden.bs.modal', function () {
                    $('body').removeClass('modal-open');
                    $('.modal-backdrop').remove();
                });
                $('#wishlistModal').on('shown.bs.modal', function () {
                    $('body').addClass('modal-open');
                    $('body').append('<div class="modal-backdrop fade show"></div>');
                });
            });
        $(document).ready(function () {
            $('#addToWishlistForm').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("AddToWishlist", "Book", new { id = Model.Id })',
                    type: 'POST',
                    success: function (result) {
                        if (result.success) {
                            $('#wishlistModal').modal('show');
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function (error) {
                        console.error('Error adding to wishlist: ', error);
                    }
                });
            });

            $('#showReviewsBtn').on('click', function () {
                $.ajax({
                    url: '@Url.Action("ShowRatings", "Book", new { id = Model.Id })',
                    type: 'GET',
                    success: function (result) {
                        $('#reviewsContainer').html(result);
                    },
                    error: function (error) {
                        console.error('Error loading reviews: ', error);
                    }
                });
            });
            
            $('#addRatingBtn').on('click', function () {
                $.ajax({
                    url: '@Url.Action("AddRating", "Book", new { id = Model.Id })',
                    type: 'GET',
                    success: function (result) {
                        $('#reviewsContainer').html(result);
                    },
                    error: function (error) {
                        console.error('Error loading reviews: ', error);
                    }
                });
            });
            
            $('#addRatingBtn').on('click', function () {
                $.ajax({
                    url: '@Url.Action("CheckRatingExists", "Book", new { id = Model.Id })',
                    type: 'GET',
                    success: function (result) {
                        if (result.ratingExists) {
                            if (confirm('Rating already exists. Do you wish to edit it?')) {
                                window.location.href = result.editUrl;
                            } else {
                                $('#addRatingModal').modal('hide');
                            }
                        } else {
                            $('#addRatingModal').modal('show');
                        }
                    },
                    error: function (error) {
                        console.error('Error checking rating: ', error);
                    }
                });
            });
            
            $('#addRatingModal').on('shown.bs.modal', function () { 
                $('#addRatingModal').find('.btn-secondary').on('click', function () {
                    $('#addRatingModal').modal('hide');
                });
            });
            
            $('#addRatingModal').on('shown.bs.modal', function () { 
                $('#addRatingModal').find('.close').on('click', function () {
                    $('#addRatingModal').modal('hide');
                });
            });

            $('#addRatingForm').submit(function (e) {
                e.preventDefault();
                var ratingValue = $('#ratingValue').val();
                var commentValue = $('#comment').val();
                
                $.ajax({
                    url: '@Url.Action("AddRating", "Book", new { id = Model.Id })',
                    type: 'POST',
                    data: { value: ratingValue, comment: commentValue },
                    success: function (result) {
                        $('#addRatingModal').modal('hide');
                        window.location.href = '@Url.Action("Detail", "Book", new { id = Model.Id })';
                    },
                    error: function (error) {
                        console.error('Error adding rating: ', error);
                    }
                });
            });
        });
    </script>
}